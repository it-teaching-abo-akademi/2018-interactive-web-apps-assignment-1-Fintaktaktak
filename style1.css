/* Width/height includes padding and margins */
* {
	box-sizing: border-box;
}

/* Have the p tag default to inheriting the background-color from its parent */
p	{
	margin: 2px;
	background-color: inherit;
}	

div.overarching	{
	margin: 5px;
	padding: 20px 5px 20px 5px;
	width: 1270px;
	height: 480px;
}

div.row	{
	width: 1240px;
	height: 150px;
}

/* Define common values for the blocks */
div.photo-block	{
	display: inline-block;
	width: 150px;
	height: 150px;
	border: 1px solid black;
	vertical-align: top;
	margin: 0;
}

/* Define specific values for each block to get the right background color */
/* text alignment, font size etc. */ 
div.text-block	{
	display: inline-flex;
	width: 150px;
	height: 150px;
	border: 1px solid black;
	vertical-align: top;
	margin: 0;
}	

/* Have specific details for each block in the layout, making sure we get the */
/* distances to be the same as in the assignment layout. */
div.text-a	{
	align-items: flex-start;
	justify-content: center;
	background-color: blue;
}
div.text-a p	{
	color: white;
}

div.text-b	{
	align-items: center;
	margin-left: 250px;
	background-color: yellow;
}
div.text-b p	{
	font-size: 40px;
	font-weight: bold;
	color: black;
}

div.text-c	{
	align-items: flex-end;
	justify-content: center;
	font-size: 20px;
	color: White;
	margin-left:150px;
	background-color: green;
}
div.text-c p	{
	font-size: 20px;
	color: white;
}

div.text-d	{
	margin-left: 75px;
	width: 700px;
	border: 2px solid red;
	background-color: gray;
}
div.text-d p	{
	color: red;
}

div.photo-1	{
}

div.photo-2	{
	margin-left: 220px;
}

div.photo-drag-1	{
	margin-left: 75px;
	border: 2px solid lightgreen;
}

div.photo-drag-2	{
	margin-left: 700px;
	border: 2px solid black;
}

/* Used to animate the upper right image */
img.photo-2	{
	transform: scaleX(-1); /* flip image */
	position: relative;
	animation: photo-move;
	animation-iteration-count: infinite;
	animation-duration: 20s;
}
/* Keyframes for animation */
@keyframes photo-move	{
	0% {transform: scaleX(-1);}
	17% {transform: scaleX(-1);}
	20% {transform: rotate(30deg);}
	50% {transform: rotate(180deg);}
	80% {transform: rotate(30deg);}
	83% {transform: scaleX(-1);}
	100% {transform: scaleX(-1);}
}
